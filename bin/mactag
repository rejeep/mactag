#!/usr/bin/env ruby

require 'fileutils'

if ARGV.include?('-h') || ARGV.include?('--help') || ARGV.include?('help')
  $stderr.puts 'Usage: mactag [new] [configuration_file]'
else
  default_config_file = File.join('config', 'mactag.rb')

  if ARGV.first == 'new'
    config_file = ARGV[1] || default_config_file

    config_dir = File.dirname(config_file)
    if File.exists?(config_dir)
      if File.exists?(config_file)
        $stderr.puts "[skip] file `#{config_file}' already exists"
      else
        content = <<-CONFIG
Mactag.configure do |config|
  # Use RVM to locate project gems.
  # config.rvm = false

  # Path to gems. No need to set this when RVM is used!
  # config.gem_home = '/Library/Ruby/Gems/1.8/gems'

  # Name of tags file to create.
  # config.tags_file = '.tags'

  # Command used to create the tags table. {INPUT} and {OUTPUT} are required!
  # config.binary = '/usr/local/Cellar/ctags/5.8/bin/ctags -e -o {OUTPUT} {INPUT}'
end

Mactag do
  # Index current project.
  # index :lib

  # Index current Rails project.
  # index :app

  # Index all models and helpers.
  # index 'app/models/*.rb', 'app/helpers/*.rb'

  # Index the gems carrierwave and redcarpet.
  # index 'carrierwave', 'redcarpet'

  # Index the gem simple_form version 1.5.2.
  # index 'simple_form', :version => '1.5.2'

  # Index rails.
  # index :rails

  # Index rails except action mailer.
  # index :rails, :except => :actionmailer

  # Index only rails packages activerecord and activesupport.
  # index :rails, :only => %w(activerecord activesupport)

  # Index rails, version 3.1.3.
  # index :rails, :version => '3.1.3'
end
CONFIG

        File.open(config_file, 'w') do |f|
          f.write(content)
        end

        puts "[done] created `#{config_file}'"
      end
    else
      $stderr.puts "[skip] directory `#{config_dir}' does not exist"
    end
  else
    config_file = ARGV[0] || default_config_file

    if File.exists?(config_file)
      require 'mactag'

      environment = File.expand_path(File.join(ENV['PWD'], 'config', 'environment.rb'))
      if File.exists?(environment)
        require environment
      end

      begin
        require config_file

        Mactag::Builder.create
      rescue Mactag::MactagError => e
        $stderr.puts "[error] #{e.message}"
      end

    else
      $stderr.puts "[skip] file `#{config_file}' does not exist"
    end
  end
end
